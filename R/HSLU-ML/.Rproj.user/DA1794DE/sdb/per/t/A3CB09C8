{
    "collab_server" : "",
    "contents" : "# HSLU Demo of the Random Forest method and a wine quality dataset https://www.r-bloggers.com/predicting-wine-quality-using-random-forests/\n\nwine <- read.csv(\"data/winequality-white.csv\", sep=\";\")\nhead(wine)\n\nbarplot(table(wine$quality))\n\n# Classify into good, bad, and normal wines based on their quality.\nwine$taste <- ifelse(wine$quality < 6, 'bad', 'good')\nwine$taste[wine$quality == 6] <- 'normal'\nwine$taste <- as.factor(wine$taste)\n\n# Summary\ntable(wine$taste)\n\n# Separate the data into testing (66%) and training (34%) sets.\nset.seed(123)\nsamp <- sample(nrow(wine), 0.66 * nrow(wine))\ntrain <- wine[samp, ]\ntest <- wine[-samp, ]\n\n# Build the random forest model\nlibrary(randomForest)\n# set.seed(415)\nmodel <- randomForest(as.factor(taste) ~ . - quality + sulphates, data = train, importance=TRUE)\n\n# Show the model configuration\nmodel\n\n# what variables were important\nvarImpPlot(model)\n\n# We can use ntree and mtry to specify the total number of trees to build (default = 500), \n# and the number of predictors to randomly sample at each split respectively. See the R Documentation\n?randomForest\n# With the default values 500 trees were built, and the model randomly sampled 3 predictors at each split. \n# It also shows a matrix containing prediction vs actual, as well as classification error for each class. \n\n# Testing the model on the test data set\npred <- predict(model, newdata = test)\npred_table <- table(pred, test$taste)\n\n# Accuracy is calculated as follows:\n(pred_table[1,1] + pred_table[2,2] + pred_table[3,3]) / nrow(test)\n\n",
    "created" : 1483976022071.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1314729763",
    "id" : "A3CB09C8",
    "lastKnownWriteTime" : 1484069724,
    "last_content_update" : 1484069724660,
    "path" : "~/Development/HSLU-ML/random-forest.R",
    "project_path" : "random-forest.R",
    "properties" : {
    },
    "relative_order" : 5,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}