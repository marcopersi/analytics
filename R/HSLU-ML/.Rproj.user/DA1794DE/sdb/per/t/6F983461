{
    "collab_server" : "",
    "contents" : "# HSLU Demo of Principal Component Analysis (PCA) using the Iris dataset\n\n# Load data\ndata(iris)\nhead(iris, 3)\n\n# first log transform the data\nlog.ir <- log(iris[, 1:4])\nir.species <- iris[, 5]\n\n# apply PCA \n# scale. = TRUE is highly advisable, but default is FALSE. \nir.pca <- prcomp(log.ir,\n                 center = TRUE,\n                 scale. = TRUE) \n# print method\nprint(ir.pca)\n# plot method\nplot(ir.pca, type = \"l\")\n# summary method\nsummary(ir.pca)\n\n# Predict PCs, assuming the last two raws of the data are new\npredict(ir.pca, newdata=tail(log.ir, 2))\n\n# Plot the PC1 and PC2 values\nbiplot(ir.pca)\n\n# There is a nicer version of this plot on github\nlibrary(devtools)\ninstall_github(\"ggbiplot\", \"vqv\")\n\nlibrary(ggbiplot)\ng <- ggbiplot(ir.pca, obs.scale = 1, var.scale = 1, \n              groups = ir.species, ellipse = TRUE, \n              circle = TRUE)\ng <- g + scale_color_discrete(name = '')\ng <- g + theme(legend.direction = 'horizontal', \n               legend.position = 'top')\nprint(g)\n",
    "created" : 1483799561337.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2317353004",
    "id" : "6F983461",
    "lastKnownWriteTime" : 1484069477,
    "last_content_update" : 1484069477042,
    "path" : "~/Development/HSLU-ML/PCA.R",
    "project_path" : "PCA.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "relative_order" : 3,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}